{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "forescoutName": {
            "type": "string",
            "metadata": {
                "description": "Enter the Forescout (Machine) Name."
            }
        },
        "adminPassword" : {
                "type": "secureString",
                "metadata": {
                    "description": "Enter your Admin password, same as for Forescout console and ssh login."
                }
        },
        "uniqueDNSName": {
            "type": "string",
            "defaultValue": "[toLower(parameters('forescoutName'))]",
            "metadata": {
                "description": "Enter a unique DNS Name for the Public IP address used to access the virtual machine."
            }
        },
        "addressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Enter the virtual network IP address in the format x.x.x.x/x"
            }
        },
        "subnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "Enter the subnet CIDR in the format x.x.x.x/cidr"
            }
        },
        "applianceIPAddress" :{
            "type" : "string",
            "metadata": {
                "description": "Enter a valid IP address from the subnet CIDR."
            }
        },
        "adminAccessIP": {
            "type": "string",
            "defaultValue": "*"
        },
        "DNSServers": {
            "type": "array",
            "defaultValue": [],
            "metadata" : {
                "description": "(Optional) Enter a valid list of FQDNs or IP addresses in format: [\"DNS1\",\"DNS2\" â€¦]." 
            }
        },
        "forescoutType": {
            "type": "string",
            "defaultValue": "Enterprise Manager",
            "allowedValues": [
                "Enterprise Manager",
                "Appliance"
            ],
            "metadata": {
                "description": "Select Enterprise Manager or Appliance."
            }
        },
        "applianceModel": {
            "defaultValue": "Standard_D4s_v3",
            "allowedValues": [
                "Standard_A4",
                "Standard_A4_v2",
                "Standard_D4s_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3"
            ],
            "type": "string",
            "metadata": {
                "description": "Select the Forescout machine type."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Enter the location for the resource group."
            }
        }
    },
    "variables": {
        "storageAccountName": "[concat('storage', uniqueString(resourceGroup().id))]",
        "imagePublisher": "forescout",
        "imageOffer": "forescout-deployment1",
        "imageSku": "beta820",
        "ethName": "[concat(parameters('forescoutName'), '-eth0')]",
        "storageAccountType": "Standard_LRS",
        "publicIPAddressName": "[concat(parameters('forescoutName'), '_PublicIP')]",
        "publicIPAddressType": "Dynamic",
        "virtualNetworkName": "[concat(resourceGroup().name,'_vnet')]",
        "subnetName": "[concat(variables('virtualNetworkName'), '_subnet')]",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
        "isEm": "[equals(parameters('forescoutType'), 'Enterprise Manager')]",
        "networkSecurityGroupName" : "[concat(resourceGroup().name,'-nsg')]",
        "networkSecurityGroupRules": [
            {
                "name": "ForescoutAccess",
                "properties": {
                    "priority": 300,
                    "protocol": "TCP",
                    "access": "Allow",
                    "direction": "Inbound",
                    "sourceAddressPrefix": "[parameters('adminAccessIP')]",
                    "sourcePortRange": "*",
                    "destinationAddressPrefix": "[parameters('subnetCIDR')]",
                    "destinationPortRanges": [
                        "22",
                        "80",
                        "443",
                        "13000"
                    ]
                }
            }
        ],
        "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "fsData": {
            "version": "1.0.0",
            "data": [
                "[concat('osmenu.em=',if(variables('isEM'), 1 ,0))]",
                "[concat('osmenu.hostname=',parameters('forescoutName'))]",
                "osmenu.pal=0",
                "osmenu.comp=0",
                "osmenu.enc=0",
                "osmenu.hamode=n",
                "osmenu.desc=Azure Cloud"
            ]
        }
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[variables('storageAccountType')]"
            },
            "kind": "StorageV2",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2018-11-01",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('uniqueDNSName')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-04-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": "[parameters('DNSServers')]"
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetCIDR')]",
                            "networkSecurityGroup": {
                                "id": "[variables('nsgId')]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-11-01",
            "name": "[variables('ethName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIpAddress": "[parameters('applianceIPAddress')]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-11-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": "[variables('networkSecurityGroupRules')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[parameters('forescoutName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('ethName'))]"
            ],
            "plan": {
              "name": "[variables('imageSKU')]",
              "publisher": "[variables('imagePublisher')]",
              "product": "[variables('imageOffer')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('applianceModel')]"
                },
                "osProfile": {
                    "computerName": "[parameters('forescoutName')]",
                    "adminUsername": "cliadmin",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData": "[base64(string(variables('fsData')))]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('storageAccountType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSku')]",
                        "version": "8.5.0"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('ethName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', variables('storageAccountName'), '.blob.core.windows.net/')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "hostname": {
            "type": "string",
            "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
        },
        "sshCommand": {
            "type": "string",
            "value": "[concat('ssh cliadmin@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
        }
    }
}
